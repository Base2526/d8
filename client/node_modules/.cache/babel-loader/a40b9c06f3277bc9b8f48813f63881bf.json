{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/Components/RideSelect/InputAutocomplete/InputAutocomplete.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { Input } from 'antd';\nimport { RightCircleOutlined } from '@ant-design/icons';\nimport ls from 'local-storage';\nexport default function InputAutocomplete(props) {\n  const [address, setAddress] = React.useState(\"\");\n  const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null\n  });\n\n  const sendDataToParent = val => {\n    props.getVal(val);\n  };\n\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]); // console.log(latLng['lat']);\n\n    setAddress(value);\n    setCoordinates(latLng);\n    ls.set('destination', value);\n    ls.set('latLng', latLng);\n    sendDataToParent([value, latLng]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlacesAutocomplete, {\n    value: address,\n    onChange: setAddress,\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({}, getInputProps({\n    placeholder: \"Select Destination\"\n  }), {\n    size: \"large\",\n    prefix: /*#__PURE__*/React.createElement(RightCircleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 102\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, \"...loading\") : null, suggestions.map(suggestion => {\n    const style = {\n      backgroundColor: suggestion.active ? \"#6783AB\" : \"#fff\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n      style\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }\n    }), suggestion.description);\n  })))));\n}","map":{"version":3,"sources":["/usr/src/app/src/Components/RideSelect/InputAutocomplete/InputAutocomplete.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","Input","RightCircleOutlined","ls","InputAutocomplete","props","address","setAddress","useState","coordinates","setCoordinates","lat","lng","sendDataToParent","val","getVal","handleSelect","value","results","latLng","set","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,IACIC,gBADJ,EAEIC,SAFJ,QAGO,2BAHP;AAIA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,OAAOC,EAAP,MAAe,eAAf;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAE7C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,KAAK,CAACW,QAAN,CAAe;AACjDG,IAAAA,GAAG,EAAE,IAD4C;AAEjDC,IAAAA,GAAG,EAAE;AAF4C,GAAf,CAAtC;;AAKA,QAAMC,gBAAgB,GAAIC,GAAD,IAAS;AAC9BT,IAAAA,KAAK,CAACU,MAAN,CAAaD,GAAb;AACH,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChC,UAAMC,OAAO,GAAG,MAAMnB,gBAAgB,CAACkB,KAAD,CAAtC;AACA,UAAME,MAAM,GAAG,MAAMnB,SAAS,CAACkB,OAAO,CAAC,CAAD,CAAR,CAA9B,CAFgC,CAGhC;;AACAX,IAAAA,UAAU,CAACU,KAAD,CAAV;AACAP,IAAAA,cAAc,CAACS,MAAD,CAAd;AACAhB,IAAAA,EAAE,CAACiB,GAAH,CAAO,aAAP,EAAsBH,KAAtB;AACAd,IAAAA,EAAE,CAACiB,GAAH,CAAO,QAAP,EAAiBD,MAAjB;AACAN,IAAAA,gBAAgB,CAAC,CAACI,KAAD,EAAQE,MAAR,CAAD,CAAhB;AACH,GATD;;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AACI,IAAA,KAAK,EAAEb,OADX;AAEI,IAAA,QAAQ,EAAEC,UAFd;AAGI,IAAA,QAAQ,EAAES,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC,CAAC;AAAEK,IAAAA,aAAF;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA,sBAA9B;AAAsDC,IAAAA;AAAtD,GAAD,kBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,oBAAWH,aAAa,CAAC;AAACI,IAAAA,WAAW,EAAC;AAAb,GAAD,CAAxB;AAA+D,IAAA,IAAI,EAAC,OAApE;AAA6E,IAAA,MAAM,eAAE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMD,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GAA2B,IADxC,EAEMF,WAAW,CAACI,GAAZ,CAAgBC,UAAU,IAAI;AAC5B,UAAMC,KAAK,GAAG;AACVC,MAAAA,eAAe,EAAEF,UAAU,CAACG,MAAX,GAAoB,SAApB,GAAgC;AADvC,KAAd;AAGA,wBAAO,6CAASP,sBAAsB,CAACI,UAAD,EAAa;AAAEC,MAAAA;AAAF,KAAb,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAyDD,UAAU,CAACI,WAApE,CAAP;AACH,GALC,CAFN,CAFJ,CALA,CADJ,CADJ;AAuBH","sourcesContent":["import React from 'react';\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng\n} from \"react-places-autocomplete\";\nimport { Input } from 'antd';\nimport { RightCircleOutlined } from '@ant-design/icons';\nimport ls from 'local-storage';\n\nexport default function InputAutocomplete(props) {\n\n    const [address, setAddress] = React.useState(\"\");\n    const [coordinates, setCoordinates] = React.useState({\n        lat: null,\n        lng: null\n    });\n\n    const sendDataToParent = (val) => {\n        props.getVal(val);\n    }\n\n    const handleSelect = async value => {\n        const results = await geocodeByAddress(value);\n        const latLng = await getLatLng(results[0]);\n        // console.log(latLng['lat']);\n        setAddress(value);\n        setCoordinates(latLng);\n        ls.set('destination', value);\n        ls.set('latLng', latLng);\n        sendDataToParent([value, latLng]);\n    };\n\n    return (\n        <div>\n            <PlacesAutocomplete \n                value={address} \n                onChange={setAddress} \n                onSelect={handleSelect}>\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n                <Input {...getInputProps({placeholder:\"Select Destination\"}) } size=\"large\"  prefix={<RightCircleOutlined />}/>\n                <div>\n                    { loading ? <div>...loading</div> : null}\n                    { suggestions.map(suggestion => {\n                        const style = {\n                            backgroundColor: suggestion.active ? \"#6783AB\" : \"#fff\"\n                        }\n                        return <div {...getSuggestionItemProps(suggestion, { style })}>{suggestion.description}</div>\n                    }) }\n                </div>\n            </div>\n            )}\n            </PlacesAutocomplete>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}